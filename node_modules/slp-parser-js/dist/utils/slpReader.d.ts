/// <reference types="node" />
export declare enum Command {
    MESSAGE_SIZES = 53,
    GAME_START = 54,
    PRE_FRAME_UPDATE = 55,
    POST_FRAME_UPDATE = 56,
    GAME_END = 57,
    ITEM_UPDATE = 59,
    FRAME_BOOKEND = 60
}
export declare enum SlpInputSource {
    BUFFER = "buffer",
    FILE = "file"
}
export declare type SlpReadInput = {
    source: SlpInputSource;
    filePath?: string;
    buffer?: Buffer;
};
export declare type SlpRefType = SlpFileSourceRef | SlpBufferSourceRef;
export declare type SlpFileType = {
    ref: SlpRefType;
    rawDataPosition: number;
    rawDataLength: number;
    metadataPosition: number;
    metadataLength: number;
    messageSizes: {
        [command: number]: number;
    };
};
export declare type PlayerType = {
    playerIndex: number;
    port: number;
    characterId: number | null;
    characterColor: number | null;
    startStocks: number | null;
    type: number | null;
    teamId: number | null;
    controllerFix: string | null;
    nametag: string | null;
};
export declare type GameStartType = {
    slpVersion: string | null;
    isTeams: boolean | null;
    isPAL: boolean | null;
    stageId: number | null;
    players: PlayerType[];
};
export declare type PreFrameUpdateType = {
    frame: number | null;
    playerIndex: number | null;
    isFollower: boolean | null;
    seed: number | null;
    actionStateId: number | null;
    positionX: number | null;
    positionY: number | null;
    facingDirection: number | null;
    joystickX: number | null;
    joystickY: number | null;
    cStickX: number | null;
    cStickY: number | null;
    trigger: number | null;
    buttons: number | null;
    physicalButtons: number | null;
    physicalLTrigger: number | null;
    physicalRTrigger: number | null;
    percent: number | null;
};
export declare type PostFrameUpdateType = {
    frame: number | null;
    playerIndex: number | null;
    isFollower: boolean | null;
    internalCharacterId: number | null;
    actionStateId: number | null;
    positionX: number | null;
    positionY: number | null;
    facingDirection: number | null;
    percent: number | null;
    shieldSize: number | null;
    lastAttackLanded: number | null;
    currentComboCount: number | null;
    lastHitBy: number | null;
    stocksRemaining: number | null;
    actionStateCounter: number | null;
    lCancelStatus: number | null;
};
export declare type ItemUpdateType = {
    frame: number | null;
    typeId: number | null;
    state: number | null;
    facingDirection: number | null;
    velocityX: number | null;
    velocityY: number | null;
    positionX: number | null;
    positionY: number | null;
    damageTaken: number | null;
    expirationTimer: number | null;
    spawnId: number | null;
};
export declare type FrameBookendType = {
    frame: number | null;
};
export declare type GameEndType = {
    gameEndMethod: number | null;
    lrasInitiatorIndex: number | null;
};
export declare type MetadataType = {
    startAt: string | null | undefined;
    playedOn: string | null | undefined;
    lastFrame: number | null | undefined;
    players: {
        [playerIndex: number]: {
            characters: {
                [internalCharacterId: number]: number;
            };
        };
    } | null | undefined;
};
export interface SlpFileSourceRef {
    source: SlpInputSource;
    fileDescriptor: number;
}
export interface SlpBufferSourceRef {
    source: SlpInputSource;
    buffer: Buffer;
}
/**
 * Opens a file at path
 */
export declare function openSlpFile(input: SlpReadInput): SlpFileType;
export declare function closeSlpFile(file: SlpFileType): void;
declare type EventPayloadTypes = GameStartType | PreFrameUpdateType | PostFrameUpdateType | ItemUpdateType | FrameBookendType | GameEndType;
declare type EventCallbackFunc = (command: Command, payload: EventPayloadTypes | null | undefined) => boolean;
/**
 * Iterates through slp events and parses payloads
 */
export declare function iterateEvents(slpFile: SlpFileType, callback: EventCallbackFunc, startPos?: number | null): number;
export declare function parseMessage(command: Command, payload: Uint8Array): EventPayloadTypes | null | undefined;
export declare function getMetadata(slpFile: SlpFileType): MetadataType | null;
export {};
